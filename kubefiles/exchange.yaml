apiVersion: v1
kind: List
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: exchange
      app.kubernetes.io/component: exchange
      app.kubernetes.io/instance: exchange
      app.kubernetes.io/name: ubi8-openjdk-17
    name: exchange
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: exchange
      app.kubernetes.io/component: exchange
      app.kubernetes.io/instance: exchange
      app.kubernetes.io/name: ubi8-openjdk-17
    name: exchange
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: exchange:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: exchange
      git:
        uri: https://github.com/ricardoalonso/exchange-application.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ubi8-openjdk-17:1.12
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: ydtntbDJnAK8TDu2qh6w
      type: GitHub
    - generic:
        secret: -oeVqROByL6ptM5mtcTV
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"exchange:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"exchange\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: exchange
      app.kubernetes.io/component: exchange
      app.kubernetes.io/instance: exchange
      app.kubernetes.io/name: ubi8-openjdk-17
    name: exchange
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: exchange
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: exchange
      spec:
        containers:
        - env:
          - name: NEWS_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: NEWS_ENDPOINT
                name: exchange
          image: ' '
          name: exchange
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: exchange
      app.kubernetes.io/component: exchange
      app.kubernetes.io/instance: exchange
      app.kubernetes.io/name: ubi8-openjdk-17
    name: exchange
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deployment: exchange
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: exchange
  data:
    NEWS_ENDPOINT: http://news.traffic-external-news.svc:5000

