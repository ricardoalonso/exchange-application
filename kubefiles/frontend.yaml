apiVersion: v1
kind: List
metadata:
  resourceVersion: ""
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deployment: frontend
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"frontend:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"frontend\")].image"}]'
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    selector:
      matchLabels:
        deployment: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          deployment: frontend
      spec:
        containers:
        - env:
          - name: REACT_APP_GW_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: REACT_APP_GW_ENDPOINT
                name: frontend
          image: 
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: frontend:latest
    runPolicy: Serial
    source:
      contextDir: frontend/v4
      git:
        uri: https://github.com/ricardoalonso/exchange-application.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs-12:latest
      type: Docker
    triggers:
    - github:
        secret: nzwLnR8V1qvZ5AisY4Y0
      type: GitHub
    - generic:
        secret: LMKhBjsNIP9k24Fukwpw
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    lookupPolicy:
      local: false
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    host: 
    port:
      targetPort: 3000-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: frontend
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: frontend
  data:
    REACT_APP_GW_ENDPOINT: https://exchange-ricardoalonsos-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
