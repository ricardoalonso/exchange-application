apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: nodejs-12
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: registry.access.redhat.com/ubi8/nodejs-12
      from:
        kind: DockerImage
        name: registry.access.redhat.com/ubi8/nodejs-12
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: frontend:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: frontend/v1
      git:
        uri: https://github.com/ricardoalonso/exchange-application.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs-12:latest
      type: Docker
    triggers:
    - github:
        secret: CxKw0458oI7j1Hk7AGsS
      type: GitHub
    - generic:
        secret: Jhwq9gyZ_45Y7CsFHZbt
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"frontend:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"frontend\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: frontend
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: frontend
      spec:
        containers:
        - env:
          - name: REACT_APP_GW_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: REACT_APP_GW_ENDPOINT
                name: frontend                
          image: ' '
          name: frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: frontend
      app.kubernetes.io/component: frontend
      app.kubernetes.io/instance: frontend
    name: frontend
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deployment: frontend
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    REACT_APP_GW_ENDPOINT: http://exchange-traffic-external.apps.ocp4.example.com
  kind: ConfigMap
  metadata:
    name: frontend
kind: List
metadata: {}
